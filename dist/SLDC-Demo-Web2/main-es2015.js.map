{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/apply-computer/apply-computer.component.ts","./src/app/apply-computer/apply-computer.component.html","./src/app/assign-computer/assign-computer.component.ts","./src/app/assign-computer/assign-computer.component.html","./src/app/change-password-option/change-password-option.component.ts","./src/app/change-password-option/change-password-option.html","./src/app/change-password-success/change-password-success.component.ts","./src/app/change-password-success/change-password-success.html","./src/app/change-password/change-password.component.ts","./src/app/change-password/change-password.component.html","./src/app/computer-list/computer-list.component.ts","./src/app/computer-list/computer-list.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/modify-email/modify-email.component.ts","./src/app/modify-email/modify-email.component.html","./src/app/my-computer/my-computer.component.ts","./src/app/my-computer/my-computer.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SLDC-Demo-Web2';\n}\n","\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { ApplyComputerComponent } from './apply-computer/apply-computer.component';\nimport { AssignComputerComponent } from './assign-computer/assign-computer.component';\nimport { MyComputerComponent } from './my-computer/my-computer.component';\nimport { ModifyEmailComponent } from './modify-email/modify-email.component';\nimport { ComputerListComponent } from './computer-list/computer-list.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { HomeComponent } from './home/home.component';\nimport { ChangePasswordSuccessComponent } from './change-password-success/change-password-success.component';\nimport { ChangePasswordOptionComponent } from './change-password-option/change-password-option.component';\nimport {FormControl, FormsModule} from '@angular/forms';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'welcome', component: WelcomeComponent ,\n    children:[\n      { path: 'apply-computer', component: ApplyComputerComponent },\n      { path: 'assign-computer', component: AssignComputerComponent },\n      { path: 'my-computer', component: MyComputerComponent },\n      { path: 'modify-email', component: ModifyEmailComponent },\n      { path: 'computer-list', component: ComputerListComponent },\n      { path: 'change-password', component: ChangePasswordComponent },\n      { path: 'home', component: HomeComponent },\n      { path: 'change-password-success', component: ChangePasswordSuccessComponent },\n      { path: 'change-password-option', component: ChangePasswordOptionComponent },\n    ]\n\n  },\n  { path: '', redirectTo: 'login', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    WelcomeComponent,\n    ApplyComputerComponent,\n    AssignComputerComponent,\n    MyComputerComponent,\n    ModifyEmailComponent,\n    ComputerListComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent,WelcomeComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-apply-computer',\n  templateUrl: './apply-computer.component.html',\n  styleUrls: ['./apply-computer.component.css']\n})\nexport class ApplyComputerComponent implements OnInit {\n  applyComputerForm: FormGroup;\n  computerType:String;\n  apply_time:String;\n  reason:String;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    \n    this.applyComputerForm = new FormGroup({\n      computer_type: new FormControl('', Validators.required),\n      apply_time: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(): void {\n    this.http.post('http://localhost:3000/computer/applications', this.applyComputerForm.value)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n  }\n}","<div class=\"apply-computer-container\">\n    <form [formGroup]=\"applyComputerForm\" (ngSubmit)=\"onSubmit()\">\n      <label>电脑类型:</label>\n      <select formControlName=\"computerType\">\n        <option value=\"desktop\">台式机</option>\n        <option value=\"laptop\">笔记本</option>\n        <option value=\"tablet\">平板电脑</option>\n      </select>\n      <br>\n      <label>原因:</label>\n      <textarea formControlName=\"reason\"></textarea>\n      <br>\n      <button type=\"submit\">申请</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-assign-computer',\n  templateUrl: './assign-computer.component.html',\n  styleUrls: ['./assign-computer.component.css']\n})\nexport class AssignComputerComponent implements OnInit {\n  assignComputerForm: FormGroup;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.assignComputerForm = new FormGroup({\n      assigner_id: new FormControl('', Validators.required),\n      computer_id: new FormControl('', Validators.required),\n      assign_time: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(): void {\n    this.http.post('http://localhost:3000/computer/allocations', this.assignComputerForm.value)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n  }\n}","<div class=\"assign-computer-container\">\n    <form [formGroup]=\"assignComputerForm\" (ngSubmit)=\"onSubmit()\">\n      <label>员工:</label>\n      <select formControlName=\"employee\">\n        <option value=\"John Doe\">John Doe</option>\n        <option value=\"Jane Doe\">Jane Doe</option>\n      </select>\n      <br>\n      <label>电脑:</label>\n      <select formControlName=\"computer\">\n        <option value=\"Desktop 1\">台式机 1</option>\n        <option value=\"Laptop 1\">笔记本 1</option>\n      </select>\n      <br>\n      <button type=\"submit\">分配电脑</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-password-option',\n  templateUrl: './change-password-option.html',\n  styleUrls: ['./change-password-option.css']\n})\nexport class ChangePasswordOptionComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}","\n  <div class=\"change-password-option-container\">\n    <h2>修改密码选项</h2>\n    <button onclick=\"javascript:window.location.href='/welcome/change-password'\">修改密码</button>\n    <button onclick=\"javascript:window.location.href='/welcome'\">取消</button>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-password-success',\n  templateUrl: './change-password-success.html',\n  styleUrls: ['./change-password-success.css']\n})\nexport class ChangePasswordSuccessComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}","\n  <div class=\"change-password-success-container\">\n    <h2>密码修改成功！</h2>\n    <p>您的密码已更新。请重定向回主页。</p>\n    <a onclick=\"javascript:window.location.href='/welcome'\">返回主页</a>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePasswordForm: FormGroup;\n  constructor(private http: HttpClient, private router: Router) { }\n  oldPassword:string;\n  newPassword:string;\n  confirmNewPassword:string;\n\n  ngOnInit(): void {\n    this.changePasswordForm = new FormGroup({\n      oldPassword: new FormControl('', Validators.required),\n      newPassword: new FormControl('', Validators.required),\n      confirmNewPassword: new FormControl('', Validators.required)\n    });\n  }\n\n  changePassword(): void {\n    this.router.navigate(['/welcome/change-password-success']);\n    // this.http.post('https://example.com/api/change-password', this.changePasswordForm.value)\n    //   .subscribe((response: any) => {\n    //     console.log(response);\n    //     this.router.navigate(['/welcome/home']);\n    //   });\n  }\n}","<div class=\"change-password-container\">\n  <h2>修改密码</h2>\n  <form>\n    <label for=\"old-password\">旧密码:</label>\n    <input type=\"password\" id=\"old-password\" name=\"old-password\">\n    <label for=\"new-password\">新密码:</label>\n    <input type=\"password\" id=\"new-password\" name=\"new-password\">\n    <label for=\"confirm-new-password\">确认新密码:</label>\n    <input type=\"password\" id=\"confirm-new-password\" name=\"confirm-new-password\">\n    <button (click)=\"changePassword()\">修改密码</button>\n    <button routerLink=\"/welcome\">取消</button>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-computer-list',\n  templateUrl: './computer-list.component.html',\n  styleUrls: ['./computer-list.component.css']\n})\nexport class ComputerListComponent implements OnInit {\n  computers: any[];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.get('https://example.com/api/computers')\n      .subscribe((response: any) => {\n        this.computers = response.computers;\n      });\n  }\n}","<div class=\"computer-list-container\">\n    <h1>电脑列表</h1>\n    <table>\n      <tr>\n        <th>电脑 ID</th>\n        <th>电脑名称</th>\n        <th>电脑类型</th>\n      </tr>\n      <tr *ngFor=\"let computer of computers\">\n        <td>{{ computer.computerId }}</td>\n        <td>{{ computer.computerName }}</td>\n        <td>{{ computer.computerType }}</td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n}","<div class=\"home-container\">\n    <h1>首页</h1>\n    <nav>\n      <ul>\n        <li><a href=\"/welcome/change-password-option\" >修改密码</a></li>\n      </ul>\n    </nav>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  isVisible: boolean;\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    this.isVisible = localStorage.getItem('token') ? false : true;\n    console.log(this.isVisible,'this.isVisiblethis.isVisible');\n    \n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(): void {\n    localStorage.setItem('token', this.loginForm.value.username);\n    localStorage.setItem('roleId', '');\n    this.router.navigate(['/welcome']);\n    // this.http.post('http://localhost:3000/login', this.loginForm.value)\n    //   .subscribe((response: any) => {\n    //     if (response.token) {\n    //       localStorage.setItem('token', response.token);\n    //       this.router.navigate(['/welcome']);\n    //     } else {\n    //       alert('Invalid username or password');\n    //     }\n    //   });\n  }\n}","<div class=\"login-container\" >\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <label>用户名:</label>\n      <input formControlName=\"username\" type=\"text\">\n      <br>\n      <label>密码:</label>\n      <input formControlName=\"password\" type=\"password\">\n      <br>\n      <button type=\"submit\">登录</button>\n      <a routerLink=\"/forgot-password\">忘记密码</a>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-modify-email',\n  templateUrl: './modify-email.component.html',\n  styleUrls: ['./modify-email.component.css']\n})\nexport class ModifyEmailComponent implements OnInit {\n  modifyEmailForm: FormGroup;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.modifyEmailForm = new FormGroup({\n      email: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(): void {\n    this.http.put('http://localhost:3000/user/email', this.modifyEmailForm.value)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n  }\n}","<div class=\"modify-email-container\">\n    <form [formGroup]=\"modifyEmailForm\" (ngSubmit)=\"onSubmit()\">\n      <label>当前邮箱:</label>\n      <input formControlName=\"currentEmail\" type=\"email\">\n      <br>\n      <label>新邮箱:</label>\n      <input formControlName=\"newEmail\" type=\"email\">\n      <br>\n      <button type=\"submit\">修改</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-my-computer',\n  templateUrl: './my-computer.component.html',\n  styleUrls: ['./my-computer.component.css']\n})\nexport class MyComputerComponent implements OnInit {\n  computerId: string;\n  computerName: string;\n  computerType: string;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  getComputerDetails(): void {\n    this.http.get('https://example.com/api/computer/details')\n      .subscribe((response: any) => {\n        this.computerId = response.computerId;\n        this.computerName = response.computerName;\n        this.computerType = response.computerType;\n      });\n  }\n}","<div class=\"my-computer-container\">\n    <h1>My Computer</h1>\n    <p>Computer ID: {{ computerId }}</p>\n    <p>Computer Name: {{ computerName }}</p>\n    <p>Computer Type: {{ computerType }}</p>\n    <button (click)=\"getComputerDetails()\">Get Computer Details</button>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n  constructor(private http: HttpClient) { }\n  username:string;\n  email:string;\n  menus: any[];\n  isVisibleWelcome:boolean;\n\n  ngOnInit(): void {\n\n    // this.http.get('https://example.com/api/role/' + localStorage.getItem('roleId'))\n    //   .subscribe((response: any) => {\n    //     if (response.roleCode === '普通员工') {\n    //       this.menus = [\n    //         { name: '申请电脑', link: '/apply-computer' },\n    //         { name: '修改邮箱', link: '/modify-email' }\n    //       ];\n    //     } else if (response.roleCode === 'IT员工') {\n    //       this.menus = [\n    //         { name: '分配电脑', link: '/assign-computer' },\n    //         { name: '查看电脑', link: '/computer-list' },\n    //         { name: '修改邮箱', link: '/modify-email' }\n    //       ];\n    //     }\n    //   });\n    this.username = localStorage.getItem('token');\n    console.log(this.username,'this.usernamethis.usernamethis.username');\n    \n    if (this.username) {\n\n      if(this.username.indexOf('IT')>= 0){\n        this.menus = [\n          { name: '分配电脑', link: '/welcome/assign-computer' },\n          { name: '修改密码', link: '/welcome/change-password-option' }\n          // { name: '查看电脑', link: '/welcome/computer-list' }\n        ];\n      }else{\n        this.menus = [\n          { name: '申请电脑', link: '/welcome/apply-computer' },\n          { name: '变更邮箱', link: '/welcome/modify-email' },\n          { name: '修改密码', link: '/welcome/change-password-option' }\n        ];\n      }\n\n      \n\n      // this.http.get('http://localhost:3000/welcome')\n      //   .subscribe((response: any) => {\n      //     console.log(response);\n      //   });\n    }\n\n    console.log(this.menus,'this.menusthis.menusthis.menus');\n  }\n}","<div class=\"welcome-container\">\n    <nav class=\"nav\">\n      <ul>\n        <li *ngFor=\"let menu of menus\">\n          <a routerLink=\"{{ menu.link }}\">{{ menu.name }}</a>\n        </li>        \n      </ul>\n    </nav>\n        <div class=\"content\">\n      <div class=\"user-info\">\n        <span>用户名：{{ username }}</span>\n      </div>\n      <router-outlet></router-outlet>\n    </div>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));"],"sourceRoot":"webpack:///"}
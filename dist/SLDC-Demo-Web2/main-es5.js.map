{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/apply-computer/apply-computer.component.ts","webpack:///src/app/apply-computer/apply-computer.component.html","webpack:///src/app/assign-computer/assign-computer.component.ts","webpack:///src/app/assign-computer/assign-computer.component.html","webpack:///src/app/change-password-option/change-password-option.component.ts","webpack:///src/app/change-password-option/change-password-option.html","webpack:///src/app/change-password-success/change-password-success.component.ts","webpack:///src/app/change-password-success/change-password-success.html","webpack:///src/app/change-password/change-password.component.ts","webpack:///src/app/change-password/change-password.component.html","webpack:///src/app/computer-list/computer-list.component.ts","webpack:///src/app/computer-list/computer-list.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/modify-email/modify-email.component.ts","webpack:///src/app/modify-email/modify-email.component.html","webpack:///src/app/my-computer/my-computer.component.ts","webpack:///src/app/my-computer/my-computer.component.html","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","routes","path","component","children","redirectTo","pathMatch","AppModule","forRoot","declarations","imports","providers","bootstrap","ApplyComputerComponent","http","ngOnInit","applyComputerForm","computer_type","required","apply_time","onSubmit","post","value","subscribe","response","console","log","AssignComputerComponent","assignComputerForm","assigner_id","computer_id","assign_time","ChangePasswordOptionComponent","ChangePasswordSuccessComponent","ChangePasswordComponent","router","changePasswordForm","oldPassword","newPassword","confirmNewPassword","changePassword","navigate","ComputerListComponent","get","computers","HomeComponent","LoginComponent","isVisible","localStorage","getItem","loginForm","username","password","setItem","ModifyEmailComponent","modifyEmailForm","email","put","MyComputerComponent","getComputerDetails","computerId","computerName","computerType","WelcomeComponent","indexOf","menus","name","link","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SLDC-Demo-Web2';\n}\n","\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { ApplyComputerComponent } from './apply-computer/apply-computer.component';\nimport { AssignComputerComponent } from './assign-computer/assign-computer.component';\nimport { MyComputerComponent } from './my-computer/my-computer.component';\nimport { ModifyEmailComponent } from './modify-email/modify-email.component';\nimport { ComputerListComponent } from './computer-list/computer-list.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { HomeComponent } from './home/home.component';\nimport { ChangePasswordSuccessComponent } from './change-password-success/change-password-success.component';\nimport { ChangePasswordOptionComponent } from './change-password-option/change-password-option.component';\nimport {FormControl, FormsModule} from '@angular/forms';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'welcome', component: WelcomeComponent ,\n    children:[\n      { path: 'apply-computer', component: ApplyComputerComponent },\n      { path: 'assign-computer', component: AssignComputerComponent },\n      { path: 'my-computer', component: MyComputerComponent },\n      { path: 'modify-email', component: ModifyEmailComponent },\n      { path: 'computer-list', component: ComputerListComponent },\n      { path: 'change-password', component: ChangePasswordComponent },\n      { path: 'home', component: HomeComponent },\n      { path: 'change-password-success', component: ChangePasswordSuccessComponent },\n      { path: 'change-password-option', component: ChangePasswordOptionComponent },\n    ]\n\n  },\n  { path: '', redirectTo: 'login', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    WelcomeComponent,\n    ApplyComputerComponent,\n    AssignComputerComponent,\n    MyComputerComponent,\n    ModifyEmailComponent,\n    ComputerListComponent,\n    ChangePasswordComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent,WelcomeComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-apply-computer',\n  templateUrl: './apply-computer.component.html',\n  styleUrls: ['./apply-computer.component.css']\n})\nexport class ApplyComputerComponent implements OnInit {\n  applyComputerForm: FormGroup;\n  computerType:String;\n  apply_time:String;\n  reason:String;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    \n    this.applyComputerForm = new FormGroup({\n      computer_type: new FormControl('', Validators.required),\n      apply_time: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(): void {\n    this.http.post('http://localhost:3000/computer/applications', this.applyComputerForm.value)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n  }\n}","<div class=\"apply-computer-container\">\n    <form [formGroup]=\"applyComputerForm\" (ngSubmit)=\"onSubmit()\">\n      <label>电脑类型:</label>\n      <select formControlName=\"computerType\">\n        <option value=\"desktop\">台式机</option>\n        <option value=\"laptop\">笔记本</option>\n        <option value=\"tablet\">平板电脑</option>\n      </select>\n      <br>\n      <label>原因:</label>\n      <textarea formControlName=\"reason\"></textarea>\n      <br>\n      <button type=\"submit\">申请</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-assign-computer',\n  templateUrl: './assign-computer.component.html',\n  styleUrls: ['./assign-computer.component.css']\n})\nexport class AssignComputerComponent implements OnInit {\n  assignComputerForm: FormGroup;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.assignComputerForm = new FormGroup({\n      assigner_id: new FormControl('', Validators.required),\n      computer_id: new FormControl('', Validators.required),\n      assign_time: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(): void {\n    this.http.post('http://localhost:3000/computer/allocations', this.assignComputerForm.value)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n  }\n}","<div class=\"assign-computer-container\">\n    <form [formGroup]=\"assignComputerForm\" (ngSubmit)=\"onSubmit()\">\n      <label>员工:</label>\n      <select formControlName=\"employee\">\n        <option value=\"John Doe\">John Doe</option>\n        <option value=\"Jane Doe\">Jane Doe</option>\n      </select>\n      <br>\n      <label>电脑:</label>\n      <select formControlName=\"computer\">\n        <option value=\"Desktop 1\">台式机 1</option>\n        <option value=\"Laptop 1\">笔记本 1</option>\n      </select>\n      <br>\n      <button type=\"submit\">分配电脑</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-password-option',\n  templateUrl: './change-password-option.html',\n  styleUrls: ['./change-password-option.css']\n})\nexport class ChangePasswordOptionComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}","\n  <div class=\"change-password-option-container\">\n    <h2>修改密码选项</h2>\n    <button onclick=\"javascript:window.location.href='/welcome/change-password'\">修改密码</button>\n    <button onclick=\"javascript:window.location.href='/welcome'\">取消</button>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-password-success',\n  templateUrl: './change-password-success.html',\n  styleUrls: ['./change-password-success.css']\n})\nexport class ChangePasswordSuccessComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}","\n  <div class=\"change-password-success-container\">\n    <h2>密码修改成功！</h2>\n    <p>您的密码已更新。请重定向回主页。</p>\n    <a onclick=\"javascript:window.location.href='/welcome'\">返回主页</a>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n  changePasswordForm: FormGroup;\n  constructor(private http: HttpClient, private router: Router) { }\n  oldPassword:string;\n  newPassword:string;\n  confirmNewPassword:string;\n\n  ngOnInit(): void {\n    this.changePasswordForm = new FormGroup({\n      oldPassword: new FormControl('', Validators.required),\n      newPassword: new FormControl('', Validators.required),\n      confirmNewPassword: new FormControl('', Validators.required)\n    });\n  }\n\n  changePassword(): void {\n    this.router.navigate(['/welcome/change-password-success']);\n    // this.http.post('https://example.com/api/change-password', this.changePasswordForm.value)\n    //   .subscribe((response: any) => {\n    //     console.log(response);\n    //     this.router.navigate(['/welcome/home']);\n    //   });\n  }\n}","<div class=\"change-password-container\">\n  <h2>修改密码</h2>\n  <form>\n    <label for=\"old-password\">旧密码:</label>\n    <input type=\"password\" id=\"old-password\" name=\"old-password\">\n    <label for=\"new-password\">新密码:</label>\n    <input type=\"password\" id=\"new-password\" name=\"new-password\">\n    <label for=\"confirm-new-password\">确认新密码:</label>\n    <input type=\"password\" id=\"confirm-new-password\" name=\"confirm-new-password\">\n    <button (click)=\"changePassword()\">修改密码</button>\n    <button routerLink=\"/welcome\">取消</button>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-computer-list',\n  templateUrl: './computer-list.component.html',\n  styleUrls: ['./computer-list.component.css']\n})\nexport class ComputerListComponent implements OnInit {\n  computers: any[];\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.http.get('https://example.com/api/computers')\n      .subscribe((response: any) => {\n        this.computers = response.computers;\n      });\n  }\n}","<div class=\"computer-list-container\">\n    <h1>电脑列表</h1>\n    <table>\n      <tr>\n        <th>电脑 ID</th>\n        <th>电脑名称</th>\n        <th>电脑类型</th>\n      </tr>\n      <tr *ngFor=\"let computer of computers\">\n        <td>{{ computer.computerId }}</td>\n        <td>{{ computer.computerName }}</td>\n        <td>{{ computer.computerType }}</td>\n      </tr>\n    </table>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n}","<div class=\"home-container\">\n    <h1>首页</h1>\n    <nav>\n      <ul>\n        <li><a href=\"/welcome/change-password-option\" >修改密码</a></li>\n      </ul>\n    </nav>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  isVisible: boolean;\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n    this.isVisible = localStorage.getItem('token') ? false : true;\n    console.log(this.isVisible,'this.isVisiblethis.isVisible');\n    \n    this.loginForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(): void {\n    localStorage.setItem('token', this.loginForm.value.username);\n    localStorage.setItem('roleId', '');\n    this.router.navigate(['/welcome']);\n    // this.http.post('http://localhost:3000/login', this.loginForm.value)\n    //   .subscribe((response: any) => {\n    //     if (response.token) {\n    //       localStorage.setItem('token', response.token);\n    //       this.router.navigate(['/welcome']);\n    //     } else {\n    //       alert('Invalid username or password');\n    //     }\n    //   });\n  }\n}","<div class=\"login-container\" >\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n      <label>用户名:</label>\n      <input formControlName=\"username\" type=\"text\">\n      <br>\n      <label>密码:</label>\n      <input formControlName=\"password\" type=\"password\">\n      <br>\n      <button type=\"submit\">登录</button>\n      <a routerLink=\"/forgot-password\">忘记密码</a>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-modify-email',\n  templateUrl: './modify-email.component.html',\n  styleUrls: ['./modify-email.component.css']\n})\nexport class ModifyEmailComponent implements OnInit {\n  modifyEmailForm: FormGroup;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.modifyEmailForm = new FormGroup({\n      email: new FormControl('', Validators.required)\n    });\n  }\n\n  onSubmit(): void {\n    this.http.put('http://localhost:3000/user/email', this.modifyEmailForm.value)\n      .subscribe((response: any) => {\n        console.log(response);\n      });\n  }\n}","<div class=\"modify-email-container\">\n    <form [formGroup]=\"modifyEmailForm\" (ngSubmit)=\"onSubmit()\">\n      <label>当前邮箱:</label>\n      <input formControlName=\"currentEmail\" type=\"email\">\n      <br>\n      <label>新邮箱:</label>\n      <input formControlName=\"newEmail\" type=\"email\">\n      <br>\n      <button type=\"submit\">修改</button>\n    </form>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-my-computer',\n  templateUrl: './my-computer.component.html',\n  styleUrls: ['./my-computer.component.css']\n})\nexport class MyComputerComponent implements OnInit {\n  computerId: string;\n  computerName: string;\n  computerType: string;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  getComputerDetails(): void {\n    this.http.get('https://example.com/api/computer/details')\n      .subscribe((response: any) => {\n        this.computerId = response.computerId;\n        this.computerName = response.computerName;\n        this.computerType = response.computerType;\n      });\n  }\n}","<div class=\"my-computer-container\">\n    <h1>My Computer</h1>\n    <p>Computer ID: {{ computerId }}</p>\n    <p>Computer Name: {{ computerName }}</p>\n    <p>Computer Type: {{ computerType }}</p>\n    <button (click)=\"getComputerDetails()\">Get Computer Details</button>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n  constructor(private http: HttpClient) { }\n  username:string;\n  email:string;\n  menus: any[];\n  isVisibleWelcome:boolean;\n\n  ngOnInit(): void {\n\n    // this.http.get('https://example.com/api/role/' + localStorage.getItem('roleId'))\n    //   .subscribe((response: any) => {\n    //     if (response.roleCode === '普通员工') {\n    //       this.menus = [\n    //         { name: '申请电脑', link: '/apply-computer' },\n    //         { name: '修改邮箱', link: '/modify-email' }\n    //       ];\n    //     } else if (response.roleCode === 'IT员工') {\n    //       this.menus = [\n    //         { name: '分配电脑', link: '/assign-computer' },\n    //         { name: '查看电脑', link: '/computer-list' },\n    //         { name: '修改邮箱', link: '/modify-email' }\n    //       ];\n    //     }\n    //   });\n    this.username = localStorage.getItem('token');\n    console.log(this.username,'this.usernamethis.usernamethis.username');\n    \n    if (this.username) {\n\n      if(this.username.indexOf('IT')>= 0){\n        this.menus = [\n          { name: '分配电脑', link: '/welcome/assign-computer' },\n          { name: '修改密码', link: '/welcome/change-password-option' }\n          // { name: '查看电脑', link: '/welcome/computer-list' }\n        ];\n      }else{\n        this.menus = [\n          { name: '申请电脑', link: '/welcome/apply-computer' },\n          { name: '变更邮箱', link: '/welcome/modify-email' },\n          { name: '修改密码', link: '/welcome/change-password-option' }\n        ];\n      }\n\n      \n\n      // this.http.get('http://localhost:3000/welcome')\n      //   .subscribe((response: any) => {\n      //     console.log(response);\n      //   });\n    }\n\n    console.log(this.menus,'this.menusthis.menusthis.menus');\n  }\n}","<div class=\"welcome-container\">\n    <nav class=\"nav\">\n      <ul>\n        <li *ngFor=\"let menu of menus\">\n          <a routerLink=\"{{ menu.link }}\">{{ menu.name }}</a>\n        </li>        \n      </ul>\n    </nav>\n        <div class=\"content\">\n      <div class=\"user-info\">\n        <span>用户名：{{ username }}</span>\n      </div>\n      <router-outlet></router-outlet>\n    </div>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));"]}